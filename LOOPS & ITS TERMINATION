{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP7TLVBLQkz9UNAAHSVkCeu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Loops\n","\n","• There may be a situation when you need to execute a block of code several number of times. ⚫ to iterate over items or elements in a given seq like list, str, dict or tup\n","• In general, statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on. paths.\n","Iterations or loops - repeate actions\n","#for loop\n","■ for iterator_name in iterating_sequence:\n","• statements1\n","• staements2\n","# while loop\n","■ until the condition satisfies For loop\n",".The for loop in Python is used to iterate over a sequence (list, tuple, string) or other iterable objects.\n",".Loop continues until we reach the last item in the sequence.\n",".The body of for loop is separated from the rest of the code using indentation.\n","#Syntax:\n","\n","for element in sequence :\n","Body of for\n","Here, element is the variable that takes the value of the item inside the sequence on each iteration.\n","Loop continues until we reach the last item in the sequence.  \n"],"metadata":{"id":"7hSe5ymZMama"}},{"cell_type":"markdown","source":["for each\n","item in\n","sequence\n","Last\n","Yes\n","item\n","reached?\n","No\n","Body of for\n"],"metadata":{"id":"Qsm2f1KyNN2L"}},{"cell_type":"code","source":["seq = [1,2,3,4,5]\n","for i in seq:\n","    pass\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VbKIyndoNTRO","executionInfo":{"status":"ok","timestamp":1719299160960,"user_tz":-330,"elapsed":545,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"e58cca71-3a55-4543-97f5-880e5d733461"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n"]}]},{"cell_type":"code","source":["seq = [1,2,3,4,5]\n","for item in seq:\n","    print(item)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-kEBe7LCNqIH","executionInfo":{"status":"ok","timestamp":1719299249011,"user_tz":-330,"elapsed":958,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"c5dda2ba-ad1c-4ad4-9d26-629593113fb6"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n"]}]},{"source":["fruits = ['apple', 'banana', 'cherry', 'mango'] # Assign the list to the variable fruits\n","for x in fruits:\n","    print(x)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"63vzvgC5OY12","executionInfo":{"status":"ok","timestamp":1719299322602,"user_tz":-330,"elapsed":1270,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"dea9d8a9-4162-4895-ac2b-2767dca3c4cd"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["apple\n","banana\n","cherry\n","mango\n"]}]},{"cell_type":"code","source":["list1=[1,2,3,4,5,6]\n","for i in list1:\n","    print(i)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ebrJ_Q9Oofv","executionInfo":{"status":"ok","timestamp":1719299734815,"user_tz":-330,"elapsed":533,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"c69e4b51-6273-41a7-d67c-2af451d2d789"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n"]}]},{"cell_type":"code","source":["a = \"123\"\n","for char in a:\n","    print(char, end='')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TtbnzFGlQAn_","executionInfo":{"status":"ok","timestamp":1719300458686,"user_tz":-330,"elapsed":511,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"d2aa9b60-3e49-4c88-ef87-b6c8d23de2f5"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["123"]}]},{"source":["for x in range(10):\n","    print (x, \"hello\" )"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_CyxOhVvTkW8","executionInfo":{"status":"ok","timestamp":1719300675566,"user_tz":-330,"elapsed":493,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"448bf310-bf32-4671-82f6-1f8e39fe819c"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["0 hello\n","1 hello\n","2 hello\n","3 hello\n","4 hello\n","5 hello\n","6 hello\n","7 hello\n","8 hello\n","9 hello\n"]}]},{"source":["# print 1 to 10 natural numbers\n","for i in range(1,11):\n","    print(i, end=\" \")"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SWF58ujbT__5","executionInfo":{"status":"ok","timestamp":1719300789013,"user_tz":-330,"elapsed":524,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"e5cc2999-2672-4524-d885-9f0b1d37a916"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 4 5 6 7 8 9 10 "]}]},{"source":["# for Loop to print all the numbers between 10 and 50 (both inclusive)\n","for i in range(10,51):\n","    print(i)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4it1OiNnURMt","executionInfo":{"status":"ok","timestamp":1719300858583,"user_tz":-330,"elapsed":528,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"c52fbfb6-2a30-4192-c1b3-7dfb2fbeb6f7"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","11\n","12\n","13\n","14\n","15\n","16\n","17\n","18\n","19\n","20\n","21\n","22\n","23\n","24\n","25\n","26\n","27\n","28\n","29\n","30\n","31\n","32\n","33\n","34\n","35\n","36\n","37\n","38\n","39\n","40\n","41\n","42\n","43\n","44\n","45\n","46\n","47\n","48\n","49\n","50\n"]}]},{"source":["#print even numbers in descending order from 1 to 100\n","for i in range(100,1,-2):\n","    print(i, end=' ')"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QIs7FQveUlPc","executionInfo":{"status":"ok","timestamp":1719300941818,"user_tz":-330,"elapsed":514,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"89635834-70a7-4134-c576-ff75809f1e0d"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["100 98 96 94 92 90 88 86 84 82 80 78 76 74 72 70 68 66 64 62 60 58 56 54 52 50 48 46 44 42 40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10 8 6 4 2 "]}]},{"cell_type":"code","source":["# Write a for Loop to print all the add numbers between 10 and 50.\n","for i in range(10, 50, 2):\n","  print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23LWXcpZUnQe","executionInfo":{"status":"ok","timestamp":1719300994557,"user_tz":-330,"elapsed":553,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"fb9b7972-a5ed-4125-b660-be6b67ece06e"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n","12\n","14\n","16\n","18\n","20\n","22\n","24\n","26\n","28\n","30\n","32\n","34\n","36\n","38\n","40\n","42\n","44\n","46\n","48\n"]}]},{"cell_type":"code","source":["items = ['item1', 'item2']\n","for i in range(len(items)):\n","    print(i)\n","print(\"item at index \",i,\" is: \", items[i])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZaGo2d1fU0ma","executionInfo":{"status":"ok","timestamp":1719301051142,"user_tz":-330,"elapsed":534,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"bc62b87d-c4f0-421f-ccbd-48dc80fe8646"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","item at index  1  is:  item2\n"]}]},{"cell_type":"code","source":[" # to print sum of n whole numbers\n","a=[1,2,3,4]\n","sum1=0 # initialization\n","sum1 = 0\n","for i in a:\n","    sum1 = sum1 + i\n","print(\"sum:\", sum1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cjQttjSbVBss","executionInfo":{"status":"ok","timestamp":1719301134427,"user_tz":-330,"elapsed":568,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"4716c19e-0a01-4b21-ba72-cc05b9a69837"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["sum: 10\n"]}]},{"cell_type":"code","source":["# to print sum of n whole numbers\n","a=[1,2,3,4]\n","sum1 =0 # initialization\n","for i in a:\n","    sum1=sum1+i\n","    print(\"after\", i, \"iteration the sum:\", sum1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8EZJCugoVWMR","executionInfo":{"status":"ok","timestamp":1719301200952,"user_tz":-330,"elapsed":3,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"9b26ca42-2c93-410e-8953-dc19429528d9"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["after 1 iteration the sum: 1\n","after 2 iteration the sum: 3\n","after 3 iteration the sum: 6\n","after 4 iteration the sum: 10\n"]}]},{"cell_type":"code","source":["# Program to iterate through a list using indexing\n","genre = ['pop', 'rock', 'jazz', 'sapna']\n","# iterate over the list using index\n","for i in range(len(genre)):\n","    print(genre[i])\n","print(\"I like\", genre[i])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"89WOom5lVmhD","executionInfo":{"status":"ok","timestamp":1719301252570,"user_tz":-330,"elapsed":571,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"faaa1e38-8e58-4884-f3a3-c15358486530"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["pop\n","rock\n","jazz\n","sapna\n","I like sapna\n"]}]},{"cell_type":"code","source":["# Write a python program to get all the even numbers from 11 to 50 (inclusive)\n","lb = int(input('enter lower bound value: '))\n","ub = int(input('enter upper bound value: '))\n","\n","for i in range(lb, ub + 1):\n","    if i % 2 == 0:\n","        print(i, end=',')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oOrqWHDjVy_2","executionInfo":{"status":"ok","timestamp":1719301330887,"user_tz":-330,"elapsed":30051,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"c38e8d94-40a9-49f9-b792-89bd740a5983"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["enter lower bound value: 10\n","enter upper bound value: 30\n","10,12,14,16,18,20,22,24,26,28,30,"]}]},{"cell_type":"code","source":["n = int(input(\"enter the number:\"))\n","for i in range(n):\n","    print(\"*\", end=\" \")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bswGrnSDWGrc","executionInfo":{"status":"ok","timestamp":1719301429958,"user_tz":-330,"elapsed":14509,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"cfca6ed7-f1ff-479e-c823-7efeb30c12a4"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["enter the number:5\n","* * * * * "]}]},{"source":["# Python Program sum of even numbers in between given range\n","lb=int(input(\"Enter the lower bound: \"))\n","ub=int(input(\"Enter the upper bound: \"))\n","s=0\n","for i in range(lb, ub+1):\n","    if (i%2==0):\n","        s=s+i\n","        print(i, end=' ')\n","print('\\nsum is',s)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_NN_9DpJW3YJ","executionInfo":{"status":"ok","timestamp":1719301548637,"user_tz":-330,"elapsed":9560,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"d32e4e4f-355e-4aa3-c619-3ce42a4bed9c"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the lower bound: 10\n","Enter the upper bound: 30\n","10 12 14 16 18 20 22 24 26 28 30 \n","sum is 220\n"]}]},{"source":["for num in range(1, 101):\n","    if num % 5 == 0 and num % 7 != 0:\n","        print(num)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"la5_jABmXOig","executionInfo":{"status":"ok","timestamp":1719301634402,"user_tz":-330,"elapsed":579,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"46092580-5238-41d8-9453-91c64a254e8c"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","10\n","15\n","20\n","25\n","30\n","40\n","45\n","50\n","55\n","60\n","65\n","75\n","80\n","85\n","90\n","95\n","100\n"]}]},{"cell_type":"code","source":["# Program to print multiple mathematical tables\n","a = int(input('enter multiplication table:'))\n","for i in range(1, 11):\n","    print(a, '*', i, '=', a * i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XjB6cMrVXRhc","executionInfo":{"status":"ok","timestamp":1719301686446,"user_tz":-330,"elapsed":5848,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"0c43c751-4913-4544-c3b0-2859562f39fd"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["enter multiplication table:5\n","5 * 1 = 5\n","5 * 2 = 10\n","5 * 3 = 15\n","5 * 4 = 20\n","5 * 5 = 25\n","5 * 6 = 30\n","5 * 7 = 35\n","5 * 8 = 40\n","5 * 9 = 45\n","5 * 10 = 50\n"]}]},{"source":["n = int(input(\"Enter the number: \"))\n","for i in range(n):\n","    for j in range(i + 1):\n","        print(\"*\", end=\" \")\n","    print()  # Move to the next line after each row"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2cSTEQN6XrQX","executionInfo":{"status":"ok","timestamp":1719301762867,"user_tz":-330,"elapsed":12202,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"03b7c9f4-3c2d-4329-87f2-92fe47f3a00a"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 4\n","* \n","* * \n","* * * \n","* * * * \n"]}]},{"cell_type":"markdown","source":["#list comprehension\n","List comprehensions provide a concise way to create lists.\n","7/18\n","Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition"],"metadata":{"id":"DvlxPXEAX4jR"}},{"source":["# without list comprehension\n","squares = []  # Initialize an empty list to store squares\n","for i in range(10):  # Iterate over numbers from 0 to 9\n","    squares.append(i**2)  # Calculate the square of 'i' and add it to the 'squares' list\n","print(squares)  # Print the list of squares"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pEeNfIKCYIl2","executionInfo":{"status":"ok","timestamp":1719301872263,"user_tz":-330,"elapsed":574,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"63717964-0561-40c5-faf2-7fdfb42c772f"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n"]}]},{"cell_type":"code","source":["#using list comprehension\n","squares = [i**2 for i in range(10)]\n","print(squares)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zEB_-PJ5YKBa","executionInfo":{"status":"ok","timestamp":1719301921999,"user_tz":-330,"elapsed":848,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"5387bca3-f6f6-45f3-859e-dafabc7e608d"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n"]}]},{"cell_type":"code","source":["movies = ['Departed', 'Titanic', 'Aviator', 'Avatar', '2012']\n","movie_lengths = [len(movie) for movie in movies]"],"metadata":{"id":"NJjIG05aYWfn","executionInfo":{"status":"ok","timestamp":1719301984819,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["list2 = [-2, -4, -5, -8, 3, 5]\n","absv = [abs(x) for x in list2]"],"metadata":{"id":"ocVHD9OpYlzP","executionInfo":{"status":"ok","timestamp":1719302032461,"user_tz":-330,"elapsed":498,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}}},"execution_count":58,"outputs":[]},{"source":["list2 = [-2, 5, -8, 0, 3]  # Initialize list2 with some values\n","both = []\n","for x in list2:\n","    if x < 0:\n","        both.append(abs(x))  # Append absolute value if negative\n","    else:\n","        both.append(x**3)  # Append cube if non-negative\n","print(both)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eM_TJSTkZHjQ","executionInfo":{"status":"ok","timestamp":1719302130102,"user_tz":-330,"elapsed":530,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"7ce4f5ef-8c74-49e4-89b4-0d2b0c89ddff"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 125, 8, 0, 27]\n"]}]},{"cell_type":"code","source":["[abs(x) if x<0 else x**3 for x in list2]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XxQOnBlGZJKT","executionInfo":{"status":"ok","timestamp":1719302158989,"user_tz":-330,"elapsed":856,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"d3051e3e-508b-486d-ea2a-6d7ea0f2d8ad"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 125, 8, 0, 27]"]},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","source":["Set Comparision"],"metadata":{"id":"p-uJynL0Zgcf"}},{"source":["movies = ['Departed', 'Titanic', 'Aviator', 'Avatar', '2012']\n","a = set()  # Initialize an empty set\n","for i in movies:  # Iterate over each movie title in the list\n","    a.add(len(i))  # Calculate the length of the movie title and add it to the set\n","print(a)  # Print the set of lengths"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"admRtB7WZvlR","executionInfo":{"status":"ok","timestamp":1719302294670,"user_tz":-330,"elapsed":745,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"86c5db0a-15d0-4c9d-f6e0-915180d6b5bc"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["{8, 4, 6, 7}\n"]}]},{"cell_type":"code","source":["movies = ['Departed', 'Titanic', 'Aviator', 'Avatar', '2012']\n","{len(i) for i in movies}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NyaHoLkNZxjs","executionInfo":{"status":"ok","timestamp":1719302319943,"user_tz":-330,"elapsed":536,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"be07dcb1-01b1-496e-b81c-eafba05f83e4"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{4, 6, 7, 8}"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["Enumurate"],"metadata":{"id":"mOZghHvcZ-TH"}},{"cell_type":"code","source":["movies = {'Departed':9, 'Titanic':9.2, 'Aviator': 8.7, 'Avatar': 9.1, '2012': 8.6}\n","{movie:rating for movie, rating in movies.items()}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DiiP0KONZ3nZ","executionInfo":{"status":"ok","timestamp":1719302385236,"user_tz":-330,"elapsed":530,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"5720a41b-c5e1-405e-c202-fd6f362102f4"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Departed': 9, 'Titanic': 9.2, 'Aviator': 8.7, 'Avatar': 9.1, '2012': 8.6}"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["#Python break Statement\n","In Python, break and continue statements can alter the flow of a normal loop.\n","Loops iterate over a block of code until test expression is false, but sometimes we wish to terminate the current iteration or even the whole loop without cheking test expression.\n","The break and continue statements are used in these cases.\n","#Syntax:\n","break\n","Enter loop\n","False\n","test expression\n","of loop\n","break?\n","True\n","No\n","Remaining body\n","of loop\n","Exit Loop\n","#Python Flow Chart & Fragran\n","\n"],"metadata":{"id":"xPakkznYaQKm"}},{"source":["numbers = [1, 2, 3, 4]\n","for num in numbers:\n","    print(num)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1hBaYoWLbSUm","executionInfo":{"status":"ok","timestamp":1719302698554,"user_tz":-330,"elapsed":577,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"6b81b61c-1e67-4117-c523-31db218b78cb"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n"]}]},{"cell_type":"markdown","source":["\n","Python Continue Statement\n","syntax:\n","continue\n","10/18\n","Enter loop\n","test expression\n","of loop\n","False\n","True\n","Yes\n","continue?\n","No\n","Remaining body\n","of loop\n","for var\n","in sequence:\n","# codes inside for loop if\n","condition: continue\n","# codes inside for loop\n","# codes outside for loop\n","while test expression:\n","# codes inside while loop if\n","condition:\n","continue\n","# codes inside while loop\n","# codes outside while loop\n","Python Programs\n","Exit Loop\n","\n","\n"],"metadata":{"id":"iP8_TZY8blq5"}},{"source":["#print odd numbers present in a list\n","numbers = [1, 2, 3, 4, 5]\n","for num in numbers:\n","    if num % 2 == 0:\n","        continue  # Skip even numbers\n","    print(num)  # Print odd numbers"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fSkWXToob_XG","executionInfo":{"status":"ok","timestamp":1719302882780,"user_tz":-330,"elapsed":554,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"96db47b5-b81e-4222-da20-c3b4bfd82f7f"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","3\n","5\n"]}]},{"cell_type":"markdown","source":["for loop with else\n","A for loop can have an optional else block as well. The else part is executed if the items in the sequence used in for loop exhausts.\n","break statement can be used to stop a for loop. In such case, the else part is ignored.\n","Hence, a for loop's else part runs if no break occurs.\n","\n"],"metadata":{"id":"Hg2Pkh0acNnu"}},{"cell_type":"code","source":["numbers = [1, 2, 3]\n","\n","# iterating over the list\n","for item in numbers:\n","    pass\n","else:\n","    pass\n","    print(item)\n","print(\"no item left in the list\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2G8TUywEcA1h","executionInfo":{"status":"ok","timestamp":1719303057776,"user_tz":-330,"elapsed":498,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"a71c70a8-a814-4c7c-b8fa-9fa0640cf1fd"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","no item left in the list\n"]}]},{"source":["numbers = [1, 2, 3, 4]\n","for item in numbers:\n","    if item % 2 == 0:\n","        print(item)  # Added closing parenthesis"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bvVVV5vpc5dv","executionInfo":{"status":"ok","timestamp":1719303121171,"user_tz":-330,"elapsed":622,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"bb9896b1-1a32-4fa5-e29f-4f019ab32209"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","4\n"]}]},{"source":["numbers = [1, 2, 3, 4]\n","for item in numbers:\n","    if item % 2 == 0:\n","        print(item)\n","        break  # Exit the loop after printing the first even number"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JVpWXg4udqBD","executionInfo":{"status":"ok","timestamp":1719303319828,"user_tz":-330,"elapsed":529,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"aab35a72-2bba-453f-f288-930d5d5f6f00"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"markdown","source":["#While loop\n","The while loop in Python is used to iterate over a block of code as long as the test expression (condition) is true.\n","We generally use this loop when we don't know beforehand, the number of times to iterate.\n","In while loop, test expression is checked first. The body of the loop is entered only if the test_expression evaluates to True. After one iteration, the test expression is checked again. This process continues until the test_expression evaluates to False.\n","In Python, the body of the while loop is determined through indentation.\n","Body starts with indentation and the first unindented line marks the end.\n","Python interprets any non-zero value as True. None and 0 are interpreted as False.\n",".while loop syntax\n","#while test_expression:\n","Body of while\n","by\n","The body of the loop is entered only if the test_expression evaluates to True.\n","After one iteration, the test expression is checked again.\n","This process continues until the test_expression evaluates to False.\n","Enter while loop.\n","Test Expression\n","False\n","True\n","Python Programm\n","Body of while\n","Exit loop\n"],"metadata":{"id":"nKf28QARd08y"}},{"source":["x = 0\n","while x < 6:\n","    x = x + 1  # Increment the lowercase 'x'\n","    print(x)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ynQsBVh8eVFF","executionInfo":{"status":"ok","timestamp":1719303495981,"user_tz":-330,"elapsed":642,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"9c883749-015f-4a21-f1a7-7232f6b5250d"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n"]}]},{"source":["x = 0\n","while x < 8:\n","    print(\"x is \", x)\n","    x = x + 1"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rrOJW8vFekIC","executionInfo":{"status":"ok","timestamp":1719303562490,"user_tz":-330,"elapsed":495,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"08ff1751-cd3c-442b-e795-8f33367aeb53"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["x is  0\n","x is  1\n","x is  2\n","x is  3\n","x is  4\n","x is  5\n","x is  6\n","x is  7\n"]}]},{"cell_type":"code","source":["x = 8\n","while x > 1:\n","    print(\"x is {}\".format(x))\n","    x = x - 1  # Decrement x to ensure the loop terminates\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w2TgSnK1enMt","executionInfo":{"status":"ok","timestamp":1719303647651,"user_tz":-330,"elapsed":625,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"2042ce1c-a58f-4815-fa6e-ed2671fe9326"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["x is 8\n","x is 7\n","x is 6\n","x is 5\n","x is 4\n","x is 3\n","x is 2\n"]}]},{"source":["i = 100\n","s = 20\n","while i <= 500:\n","    s = s + i  # Update the lowercase 's' with the sum\n","    i = i + 100\n","print(s)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cp3IBvPnfUvD","executionInfo":{"status":"ok","timestamp":1719303759733,"user_tz":-330,"elapsed":1028,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"e2157279-d380-4a75-9d4b-49633b354e73"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["1520\n"]}]},{"source":["i = 0\n","s = 0\n","while (i <= 5):\n","    s = s + i  # Update the lowercase 's' with the sum\n","    i += 2\n","print(s)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AYwbPojUflQs","executionInfo":{"status":"ok","timestamp":1719303828313,"user_tz":-330,"elapsed":618,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"aa73bd31-909b-4c15-9c11-ca65f6ffcb10"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n"]}]},{"source":["x = 0\n","print(x)  # Print the initial value of x\n","while x < 5:\n","    x = x + 1  # Increment the lowercase 'x'\n","    print(x)  # Print the updated value of x in each iteration"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4Tnl5vXf2uZ","executionInfo":{"status":"ok","timestamp":1719303896635,"user_tz":-330,"elapsed":743,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"aee27ce0-9065-4520-ef28-67fa744e7f42"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n"]}]},{"source":["i = 0\n","S = 0\n","while (i <= 10):\n","    S = S + i  # Update the uppercase 'S' with the sum\n","    i += 2\n","print(S)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RaLgyEMgN21","executionInfo":{"status":"ok","timestamp":1719303991869,"user_tz":-330,"elapsed":520,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"b4af9077-9867-4902-92cf-d4c9fdae2a5c"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stdout","text":["30\n"]}]},{"source":["# program to print 0 to 100 (inclusive) whole numbers\n","i = 0\n","while (i <= 100):\n","    print(i, end=' ')  # Use a space as the end character\n","    i = i + 1"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1VlJ3j6Igcmz","executionInfo":{"status":"ok","timestamp":1719304051862,"user_tz":-330,"elapsed":537,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"760a2282-9ea4-4747-a1bb-2c0c7c1f8546"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 "]}]},{"source":["# Program to \"n\" add natural numbers --> sum = 1+2+3+...+n\n","n = int(input(\"Enter n: \"))\n","sum = 0\n","i = 1\n","while i <= n:\n","    sum = sum + i\n","    i=i+1\n","print(\"The sum is\", sum)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CcSGN2O2grdg","executionInfo":{"status":"ok","timestamp":1719304125512,"user_tz":-330,"elapsed":14106,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"5aedee39-4a50-4b10-a88e-1dcedceb2689"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter n: 5\n","The sum is 15\n"]}]},{"cell_type":"code","source":["# Find product of all numbers present in a list\n","list1 = [1, 2, 3, 4, 6]\n","product = 1\n","for i in list1:\n","    product = product * i\n","index = 0\n","product = 1\n","while index < len(list1):\n","    product *= list1[index]\n","    index += 2\n","print(\"Product is: {}\".format(product))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jIsn3FzQhcYz","executionInfo":{"status":"ok","timestamp":1719304344134,"user_tz":-330,"elapsed":495,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"02d4e106-9f77-4913-c1bc-dc02c9daf950"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["Product is: 18\n"]}]},{"source":["# Ask the user to enter numbers and sum them\n","s = 0\n","while True:\n","    a = input('Enter a value (or \"done\" to finish): ')\n","    if (a == 'done'):\n","        break\n","    s = s + int(a)\n","print(s)  # Print the final sum after the loop ends"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X013hO2GjsmK","executionInfo":{"status":"ok","timestamp":1719305230780,"user_tz":-330,"elapsed":5697,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"4b8e1c1e-9c85-49ee-c2a6-0f8c8deff0f7"},"execution_count":123,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a value (or \"done\" to finish): done\n","0\n"]}]},{"cell_type":"markdown","source":["#while Loop with else\n","Same as that of for loop, we can have an optional else block with while loop as well.\n","Sam\n","The else part is executed if the condition in the while loop evaluates to False. The while loop can be terminated with a break statement.\n","In such case, the else part is ignored. Hence, a while loop's else part runs if no break occurs and the condition is false.\n"],"metadata":{"id":"JbwtYhaClJ26"}},{"source":["x = 8\n","while x > 1:\n","    print(\"x is {}\".format(x))\n","    x = x - 1  # Decrement x to ensure the loop terminates\n","print(\"x is no longer greater than 1\")  # Print message after the loop"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GYvK80halmXj","executionInfo":{"status":"ok","timestamp":1719305403348,"user_tz":-330,"elapsed":529,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"24925f50-0cde-4372-9925-195e4301a66b"},"execution_count":125,"outputs":[{"output_type":"stream","name":"stdout","text":["x is 8\n","x is 7\n","x is 6\n","x is 5\n","x is 4\n","x is 3\n","x is 2\n","x is no longer greater than 1\n"]}]},{"source":["x = 0\n","while x < 8:\n","    print(\"x is {}\".format(x))\n","    x += 1  # Increment the lowercase 'x'\n","print(\"x is no longer < 8\")  # Print the message after the loop"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FlJ6fpGl5nJ","executionInfo":{"status":"ok","timestamp":1719305482629,"user_tz":-330,"elapsed":570,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"d9b86d29-cc7c-4690-dceb-efa8eba3adaa"},"execution_count":127,"outputs":[{"output_type":"stream","name":"stdout","text":["x is 0\n","x is 1\n","x is 2\n","x is 3\n","x is 4\n","x is 5\n","x is 6\n","x is 7\n","x is no longer < 8\n"]}]},{"source":["numbers = [1, 2, 3, 4]  # Initialize the list\n","index = 0\n","while index < len(numbers):\n","    print(numbers[index])\n","    index += 1\n","else:  # This block executes when the loop condition becomes false\n","    print(\"no item left in the list\")"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BsxVhixXmLkl","executionInfo":{"status":"ok","timestamp":1719305554575,"user_tz":-330,"elapsed":524,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"5d20ca70-d161-4656-b13c-73da17fc45ff"},"execution_count":130,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","no item left in the list\n"]}]},{"source":["# Taking input from the user\n","num = int(input(\"Enter a number: \"))\n","\n","factorial = 1\n","\n","# Check if the number is negative, zero or positive\n","if num < 0:\n","   print(\"Sorry, factorial does not exist for negative numbers\")\n","elif num == 0:\n","   print(\"The factorial of 0 is 1\")\n","else:\n","   for i in range(1,num + 1):\n","       factorial = factorial*i\n","   print(\"The factorial of\", num, \"is\", factorial)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q4iQ28eMmfBz","executionInfo":{"status":"ok","timestamp":1719305684876,"user_tz":-330,"elapsed":3425,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"c52500f0-1f94-4374-aa8d-7cf981e57ec5"},"execution_count":133,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 5\n","The factorial of 5 is 120\n"]}]},{"cell_type":"code","source":["# Write a program which can compute the factorial of a given numbers.\n","a=int(input())\n","fact=1\n","for i in range(1,a+1):\n","    fact=fact*i\n","print(\"after\", i, \"iteration the factorial value is:\", fact)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6IUYHKg6m6E-","executionInfo":{"status":"ok","timestamp":1719305883544,"user_tz":-330,"elapsed":5395,"user":{"displayName":"Ananya Mohanty","userId":"16124825928085113691"}},"outputId":"f05eca54-28a4-416e-9721-4ab796c79b9c"},"execution_count":141,"outputs":[{"output_type":"stream","name":"stdout","text":["7\n","after 7 iteration the factorial value is: 5040\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"-vLIfSgnnU-s"}}]}